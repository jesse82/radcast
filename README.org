#+TITLE: Radcast - Radical podcast automation

Radcast was created to save hours of podcast encode and upload time by automation.

**** Workflow

     1. Choose File
     2. Set in/out frames
     3. Upload

     [[docs/radcast-draft1.gif]]

     Default templates can be set up for series graphics, intro / outro, so they are added to the video sequence automatically. Using the template builder ([[TODO.md][work in progress]]).

*** Requirements

    Radcast currently uses the MLT framework for video playback and editing, jinja2 for templating, and ffmpeg for encoding. It is being ported to a Qt5/MoviePy stack for more compatibility across non-free platforms like Windows and MacOS.

** Installation

*** Debian

    #+BEGIN_EXAMPLE
    sudo apt-get update
    sudo apt-get install python-mlt ffmpeg python-pip python-jinja2
    pip install PyVimeo
    #+END_EXAMPLE

*** Fedora

    #+BEGIN_EXAMPLE
    sudo dnf install mlt-python python-pip python2-jinja2 ffmpeg
    pip install PyVimeo
    #+END_EXAMPLE

** Status

   Under development. Currently overhauling the interface from tkinter prototype to Qt5 for cross-platform compatibility and OS native look and feel.

   Check the [[TODO.md][TODO]] page for more detailed items still left to be done.

** Contribution

   Pull requests are welcome. If bugs are found, please feel free to open an issue.

   To assist in the development of Radcast, the following should help you get started:

*** Debian

   #+BEGIN_EXAMPLE
   sudo apt-get install pyqt5-dev pyqt5-dev-tools pyqt5-examples qtmultimedia5-examples qtmultimedia5-dev
   #+END_EXAMPLE

   #+BEGIN_EXAMPLE
   sudo apt-get install python3-pyqt5 python3-pyqt5-dbg python3-pyqt5.qtmultimedia python3-pyqt5.qtmultimedia-dbg
   #+END_EXAMPLE


   Note: Although some of these packages are optional, the =qtmultimedia5-examples= is particularly needed; otherwise a =no service found for - "org.qt-project.qt.mediaplayer"= message will appear at runtime.
